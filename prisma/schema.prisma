// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "relationJoins", "omitApi"]
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("DIRECT_UNPOOLED_URL") // uses direct connection
}

// Tables start here
model Recipe {
  id             String                 @id @default(cuid())
  title          String
  description    String                 @db.VarChar(2048)
  isPublic       Boolean                @default(false)
  userId         String
  timeInKitchen  Int
  waitingTime    Int
  numberOfPeople Int
  ratings        RecipeRating[]
  ingredients    IngredientsOnRecipes[]
  steps          Step[]
}

model RecipeRating {
  id       String @id @default(cuid())
  rating   Int
  userId   String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String

  @@unique([userId, recipeId])
  @@index([recipeId])
}

model Ingredient {
  id      String                 @id @default(cuid())
  name    String
  unit    String
  userId  String
  recipes IngredientsOnRecipes[]
}

model IngredientsOnRecipes {
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId String
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  recipeId     String
  quantity     Float
  assignedAt   DateTime   @default(now())

  @@id([ingredientId, recipeId])
  @@index([ingredientId])
  @@index([recipeId])
}

model Step {
  id       String @id @default(cuid())
  content  String @db.VarChar(2048)
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String

  @@index([recipeId])
}
